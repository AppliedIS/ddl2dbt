{{ config(tags = ['core']) }}

{%- set metadata_yaml -%}
source_model:
  PEAK_POLICY_CONFORMED: 'TRANSACTION'
include_source_columns: true
derived_columns:
  LOAD_TIMESTAMP: 'CURRENT_TIMESTAMP()'
  RECORD_SOURCE: '!PEAK'
  EFFECTIVE_TIMESTAMP: 'TO_TIMESTAMP(EFFECTIVEDATE)'
  INCLUDEDELETED: 'INCLUDEDELETED'
  PRODUCTKIND: 'PRODUCTKIND'
  RETRIEVEPOLICY_ID: 'RETRIEVEPOLICY_ID'
  DATA_ID: 'DATA_ID'
  POLICYADMIN_ID: 'POLICYADMIN_ID'
  TRANSACTIONS_ID: 'TRANSACTIONS_ID'
  TRANSACTION_ID: 'TRANSACTION_ID'
  CHARGE: 'CHARGE'
  COMMITFAILURE: 'COMMITFAILURE'
  COMMITSTATUS: 'COMMITSTATUS'
  CONVERTEDTRANSACTIONTYPE: 'CONVERTEDTRANSACTIONTYPE'
  CREATEDDATE: 'CREATEDDATE'
  CREATEDUSER: 'CREATEDUSER'
  DEPRECATEDBY: 'DEPRECATEDBY'
  DESTINATIONPOLICYID: 'DESTINATIONPOLICYID'
  EFFECTIVEDATE: 'EFFECTIVEDATE'
  EXPIRATIONDATE: 'EXPIRATIONDATE'
  GLOBALBUSINESSPROCESSID: 'GLOBALBUSINESSPROCESSID'
  ISOUTOFSEQUENCE: 'ISOUTOFSEQUENCE'
  ISSUEDDATE: 'ISSUEDDATE'
  ISSUEDUSERNAME: 'ISSUEDUSERNAME'
  ISVISIBLETOCUSTOMER: 'ISVISIBLETOCUSTOMER'
  NEWPREMIUM: 'NEWPREMIUM'
  OFFSETDATE: 'OFFSETDATE'
  ONSETBY: 'ONSETBY'
  ORIGINALCHARGE: 'ORIGINALCHARGE'
  ORIGINALEFFECTIVEDATE: 'ORIGINALEFFECTIVEDATE'
  ORIGINALID: 'ORIGINALID'
  POLICYMANUSCRIPTID: 'POLICYMANUSCRIPTID'
  POLICYNUMBER: 'POLICYNUMBER'
  POLICYSTATUS: 'POLICYSTATUS'
  PREVIOUSHISTORYID: 'PREVIOUSHISTORYID'
  PRIORPREMIUM: 'PRIORPREMIUM'
  PRODUCT: 'PRODUCT'
  PRODUCTISREADONLY: 'PRODUCTISREADONLY'
  PRORATEFACTOR: 'PRORATEFACTOR'
  QUOTETYPE: 'QUOTETYPE'
  RATINGACTIVITYID: 'RATINGACTIVITYID'
  REPLACEMENTID: 'REPLACEMENTID'
  REVISIONOF: 'REVISIONOF'
  SCHEDULEDATE: 'SCHEDULEDATE'
  SHORTRATEFACTOR: 'SHORTRATEFACTOR'
  SOURCEPOLICYID: 'SOURCEPOLICYID'
  STATE: 'STATE'
  STATUS: 'STATUS'
  STATUSUSER: 'STATUSUSER'
  STATUSUSERCONTEXT: 'STATUSUSERCONTEXT'
  TERMEFFECTIVEDATE: 'TERMEFFECTIVEDATE'
  TERMPREMIUM: 'TERMPREMIUM'
  TRANSACTIONDATE: 'TRANSACTIONDATE'
  TYPE: 'TYPE'
  TYPECAPTION: 'TYPECAPTION'
  WAIVECHARGECHECK: 'WAIVECHARGECHECK'
hashed_columns:
  POLICY_TRANSACTION_HAS_POLICY_TRANSACTION_HK: ''
  HASHDIFF:
    is_hashdiff: true
    columns:
      - 'RECORD_SOURCE'
      - 'INCLUDEDELETED'
      - 'PRODUCTKIND'
      - 'RETRIEVEPOLICY_ID'
      - 'DATA_ID'
      - 'POLICYADMIN_ID'
      - 'TRANSACTIONS_ID'
      - 'TRANSACTION_ID'
      - 'CHARGE'
      - 'COMMITFAILURE'
      - 'COMMITSTATUS'
      - 'CONVERTEDTRANSACTIONTYPE'
      - 'CREATEDDATE'
      - 'CREATEDUSER'
      - 'DEPRECATEDBY'
      - 'DESTINATIONPOLICYID'
      - 'EFFECTIVEDATE'
      - 'EXPIRATIONDATE'
      - 'GLOBALBUSINESSPROCESSID'
      - 'ISOUTOFSEQUENCE'
      - 'ISSUEDDATE'
      - 'ISSUEDUSERNAME'
      - 'ISVISIBLETOCUSTOMER'
      - 'NEWPREMIUM'
      - 'OFFSETDATE'
      - 'ONSETBY'
      - 'ORIGINALCHARGE'
      - 'ORIGINALEFFECTIVEDATE'
      - 'ORIGINALID'
      - 'POLICYMANUSCRIPTID'
      - 'POLICYNUMBER'
      - 'POLICYSTATUS'
      - 'PREVIOUSHISTORYID'
      - 'PRIORPREMIUM'
      - 'PRODUCT'
      - 'PRODUCTISREADONLY'
      - 'PRORATEFACTOR'
      - 'QUOTETYPE'
      - 'RATINGACTIVITYID'
      - 'REPLACEMENTID'
      - 'REVISIONOF'
      - 'SCHEDULEDATE'
      - 'SHORTRATEFACTOR'
      - 'SOURCEPOLICYID'
      - 'STATE'
      - 'STATUS'
      - 'STATUSUSER'
      - 'STATUSUSERCONTEXT'
      - 'TERMEFFECTIVEDATE'
      - 'TERMPREMIUM'
      - 'TRANSACTIONDATE'
      - 'TYPE'
      - 'TYPECAPTION'
      - 'WAIVECHARGECHECK'
      - 'POLICY_TRANSACTION_HAS_POLICY_TRANSACTION_HK'
{%- endset -%}

{% set metadata_dict = fromyaml(metadata_yaml) -%}

{% set source_model = metadata_dict['source_model'] -%}
{% set include_source_columns = metadata_dict['include_source_columns'] -%}
{% set hashed_columns = metadata_dict['hashed_columns'] -%}
{% set derived_columns = metadata_dict['derived_columns'] -%}

WITH stg AS (
  {{ dbtvault.stage(include_source_columns=include_source_columns,
                      source_model=source_model,
                      hashed_columns=hashed_columns,
                      derived_columns=derived_columns) }} 
  {{ limit_records() }}
),
stg_loadtimestamp AS (
  {{ append_loadtimestamp(stage_name = 'stg') }}
)

SELECT * FROM stg_loadtimestamp